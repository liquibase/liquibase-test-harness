<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:snowflake="http://www.liquibase.org/xml/ns/snowflake"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
                      http://www.liquibase.org/xml/ns/snowflake
                      http://www.liquibase.org/xml/ns/snowflake/liquibase-snowflake-latest.xsd">

    <!-- Schema-isolated test template -->
    
    <!-- Step 1: Create test-specific schema (always runs) -->
    <changeSet id="create-schema-${testName}" author="test-harness" runAlways="true">
        <preConditions onFail="CONTINUE">
            <sqlCheck expectedResult="1">SELECT 1</sqlCheck>
        </preConditions>
        <sql>
            -- Generate unique schema name with timestamp to avoid conflicts
            CREATE SCHEMA IF NOT EXISTS TEST_${testName}_${timestamp}
        </sql>
        <sql>
            USE SCHEMA TEST_${testName}_${timestamp}
        </sql>
        <rollback>
            DROP SCHEMA IF EXISTS TEST_${testName}_${timestamp} CASCADE
        </rollback>
    </changeSet>

    <!-- Step 2: The actual test operations -->
    <changeSet id="test-${testName}" author="test-harness">
        <comment>Actual test in isolated schema</comment>
        <snowflake:createWarehouse 
            warehouseName="TEST_WAREHOUSE"
            warehouseSize="XSMALL"/>
        <!-- Note: No schema prefix needed - we're IN the test schema -->
        <rollback>
            <snowflake:dropWarehouse warehouseName="TEST_WAREHOUSE"/>
        </rollback>
    </changeSet>

    <!-- Step 3: Cleanup schema (always runs) -->
    <changeSet id="cleanup-schema-${testName}" author="test-harness" runAlways="true">
        <preConditions onFail="CONTINUE">
            <sqlCheck expectedResult="1">SELECT 1</sqlCheck>
        </preConditions>
        <sql>
            USE SCHEMA TESTHARNESS;  -- Switch back to default
            DROP SCHEMA IF EXISTS TEST_${testName}_${timestamp} CASCADE
        </sql>
        <rollback/>
    </changeSet>

</databaseChangeLog>