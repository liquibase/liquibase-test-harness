# Basic workflow with Actions

name: Oracle Parallel Test Execution
on:
  schedule:
    - cron: "0 8 * * *" # Execute every day at 8am
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        plan: [18.4.0, 19.3.0, 23.2.0]

    steps:
      - uses: actions/checkout@v5
      - run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - uses: actions/setup-java@v5
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "maven"

      - name: Docker login to retrive Oracle images from private repo
        run: docker login "${{ env.REPO_URL }}" -u "${{ env.REPO_USER }}" -p "${{ env.REPO_PASSWORD }}"

      - name: Build Oracle Artifactory test infra
        if: ${{ matrix.plan == '19.3.0' }}
        working-directory: src/test/resources/docker/oracle-artifactory
        run: docker compose up -d

      - name: Build Oracle XE test infra
        if: ${{ matrix.plan != '19.3.0' }}
        working-directory: src/test/resources/docker/oracle-xe
        run: |
          # Constructing service name from version
          SERVICE_NAME="oracle-xe-${{ matrix.plan }}"
          docker compose up -d $SERVICE_NAME

      # Adding sleep to avoid ORA-12514 error when database & listeners are still in the middle of startup
      - name: Sleep for 180 seconds
        uses: whatnick/wait-action@master
        with:
          time: "180s"

      - name: Oracle ${{ matrix.plan }} Test Run
        run: |
          docker ps
          mvn -ntp -Dtest=LiquibaseHarnessSuiteTest -DdbName=oracle -DdbVersion=${{ matrix.plan }} test
        env:
          LIQUIBASE_PRO_LICENSE_KEY: ${{ env.PRO_LICENSE_KEY }}

      - name: Archive Oracle ${{ matrix.plan }} test results
        uses: actions/upload-artifact@v4
        with:
          name: oracle-${{ matrix.plan }}-test-results
          path: build/spock-reports

      - name: Tear down Oracle test infra
        working-directory: src/test/resources/docker/oracle-artifactory
        run: docker compose down --volumes

      - name: Tear down Oracle XE test infra
        working-directory: src/test/resources/docker/oracle-xe
        run: docker compose down --volumes
