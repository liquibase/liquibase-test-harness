# Terraform Action to test Cloud Databases with test-harness

name: Oracle OCI Test Execution
concurrency: oracle-oci-run
on:
  # Triggers the workflow on a schedule for the main branch. Also allows for manual triggers
  schedule:
    - cron: '0 6 * * *' # Execute every day at 6AM UTC
  workflow_dispatch:
    inputs:
      testClasses:
        type: choice
        description: Test Suite or test class to run
        options:
          - LiquibaseHarnessSuiteTest
          - FoundationalHarnessSuiteTest
          - ChangeObjectTests
          - ChangeDataTests
          - SnapshotObjectTests
          - GenerateChangelogTest
          - FoundationalTest
          - AdvancedHarnessSuiteTest

permissions:
  contents: write
  id-token: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      testClasses: ${{ inputs.testClasses  || 'LiquibaseHarnessSuiteTest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

  test:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5


      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true
          
      - name: Oracle OCI Test Run
        env:
          LIQUIBASE_PRO_LICENSE_KEY: ${{ env.PRO_LICENSE_KEY }}

        run: mvn -Dtest=${{ needs.setup.outputs.testClasses }} -DconfigFile=/harness-config-cloud.yml -DdbName=oracle -DdbVersion=oci -Dprefix=oci -DdbUsername=ADMIN -DdbPassword=${{env.TH_DB_PASSWD}} -DdbUrl='${{ env.TH_OCI_ORACLE_19c_URL }}' test

      - name: Archive Oracle OCI Test Results
        uses: actions/upload-artifact@v4
        with:
          name: oracle-oci-test-results
          path: build/spock-reports
