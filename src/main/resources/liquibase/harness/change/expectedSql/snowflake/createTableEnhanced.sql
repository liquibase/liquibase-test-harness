CREATE TRANSIENT TABLE TEST_TRANSIENT_TABLE (
id INTEGER PRIMARY KEY,
name VARCHAR(100),
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) COMMENT = 'Transient test table'
CREATE TABLE TEST_CLUSTERED_TABLE (
id INTEGER,
category VARCHAR(50),
subcategory VARCHAR(50),
data VARCHAR(500),
created_date DATE
) CLUSTER BY (category, subcategory)
COMMENT = 'Table with clustering keys'
CREATE TABLE TEST_RETENTION_TABLE (
id INTEGER,
data VARCHAR(200),
timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) DATA_RETENTION_TIME_IN_DAYS = 7
COMMENT = 'Table with data retention'
CREATE TABLE TEST_CHANGE_TRACKING_TABLE (
id INTEGER PRIMARY KEY,
data VARCHAR(200),
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) CHANGE_TRACKING = TRUE
COMMENT = 'Table with change tracking'
CREATE TRANSIENT TABLE TEST_FULL_FEATURE_TABLE (
id INTEGER PRIMARY KEY,
category VARCHAR(50),
data VARCHAR(500),
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)
CLUSTER BY (category)
DATA_RETENTION_TIME_IN_DAYS = 1
CHANGE_TRACKING = TRUE
COMMENT = 'Full featured Snowflake table'
CREATE TABLE TEST_COMPLEX_TYPES_TABLE (
id INTEGER PRIMARY KEY,
json_data VARIANT,
array_data ARRAY,
object_data OBJECT,
geography_data GEOGRAPHY,
binary_data BINARY(100),
timestamp_ntz TIMESTAMP_NTZ,
timestamp_ltz TIMESTAMP_LTZ,
timestamp_tz TIMESTAMP_TZ
) COMMENT = 'Table with Snowflake complex data types'
ALTER TABLE TEST_RETENTION_TABLE CLUSTER BY (id)
ALTER TABLE TEST_CLUSTERED_TABLE SET DATA_RETENTION_TIME_IN_DAYS = 30
ALTER TABLE TEST_RETENTION_TABLE SET CHANGE_TRACKING = TRUE
DROP TABLE LTHDB.TESTHARNESS.TEST_TRANSIENT_TABLE
DROP TABLE LTHDB.TESTHARNESS.TEST_CLUSTERED_TABLE
DROP TABLE LTHDB.TESTHARNESS.TEST_RETENTION_TABLE
DROP TABLE LTHDB.TESTHARNESS.TEST_CHANGE_TRACKING_TABLE
DROP TABLE LTHDB.TESTHARNESS.TEST_FULL_FEATURE_TABLE
DROP TABLE LTHDB.TESTHARNESS.TEST_COMPLEX_TYPES_TABLE