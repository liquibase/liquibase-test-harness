<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:snowflake="http://www.liquibase.org/xml/ns/snowflake"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
                      http://www.liquibase.org/xml/ns/snowflake
                      http://www.liquibase.org/xml/ns/snowflake/liquibase-snowflake-latest.xsd">
    
    <!-- Include init.xml for cleanup -->
    <include file="liquibase/harness/change/changelogs/snowflake/init.xml"/>

    <!-- Clean up any schemas this test might create -->
    <changeSet author="test-harness" id="cleanup-test-schemas" runAlways="true">
        <sql>DROP SCHEMA IF EXISTS TEST_TRANSIENT_SCHEMA CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_MANAGED_SCHEMA CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_MANAGED_SCHEMA_RENAMED CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_RETENTION_SCHEMA CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_FULL_SCHEMA CASCADE</sql>
    </changeSet>

    <changeSet author="test-harness" id="createSchema-transient">
        <snowflake:createSchema schemaName="TEST_TRANSIENT_SCHEMA" 
                      transient="true" 
                      comment="Transient test schema"/>
        <rollback>
            <sql>DROP SCHEMA IF EXISTS TEST_TRANSIENT_SCHEMA</sql>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="createSchema-managedAccess">
        <snowflake:createSchema schemaName="TEST_MANAGED_SCHEMA" 
                      managedAccess="true" 
                      comment="Managed access schema"/>
        <rollback>
            <sql>DROP SCHEMA IF EXISTS TEST_MANAGED_SCHEMA</sql>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="createSchema-retention">
        <snowflake:createSchema schemaName="TEST_RETENTION_SCHEMA" 
                      dataRetentionTimeInDays="7" 
                      comment="Schema with retention"/>
        <rollback>
            <sql>DROP SCHEMA IF EXISTS TEST_RETENTION_SCHEMA</sql>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="createSchema-full">
        <snowflake:createSchema schemaName="TEST_FULL_SCHEMA" 
                      transient="true"
                      managedAccess="true" 
                      comment="Full featured schema"/>
        <rollback>
            <sql>DROP SCHEMA IF EXISTS TEST_FULL_SCHEMA</sql>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="alterSchema-comment">
        <snowflake:alterSchema schemaName="TEST_TRANSIENT_SCHEMA" 
                     newComment="Modified transient schema"/>
        <rollback>
            <snowflake:alterSchema schemaName="TEST_TRANSIENT_SCHEMA" 
                         newComment="Transient test schema"/>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="alterSchema-retention">
        <snowflake:alterSchema schemaName="TEST_RETENTION_SCHEMA" 
                     newDataRetentionTimeInDays="21"/>
        <rollback>
            <snowflake:alterSchema schemaName="TEST_RETENTION_SCHEMA" 
                         newDataRetentionTimeInDays="7"/>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="alterSchema-rename">
        <snowflake:alterSchema schemaName="TEST_MANAGED_SCHEMA" 
                     newName="TEST_MANAGED_SCHEMA_RENAMED"/>
        <rollback>
            <snowflake:alterSchema schemaName="TEST_MANAGED_SCHEMA_RENAMED" 
                         newName="TEST_MANAGED_SCHEMA"/>
        </rollback>
    </changeSet>

    <changeSet author="test-harness" id="cleanup-schemas">
        <sql>DROP SCHEMA IF EXISTS TEST_TRANSIENT_SCHEMA CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_MANAGED_SCHEMA_RENAMED CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_RETENTION_SCHEMA CASCADE</sql>
        <sql>DROP SCHEMA IF EXISTS TEST_FULL_SCHEMA CASCADE</sql>
    </changeSet>

</databaseChangeLog>